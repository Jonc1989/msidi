{"version":3,"sources":["app.js","modules/case_studies/CaseStudies.js","modules/clients/clients.js","modules/company/company.js","modules/case_studies/services/CaseStudiesService.js","modules/case_studies/controllers/CaseStudiesController.js","modules/clients/controllers/ClientsController.js","modules/company/controllers/CompanyController.js","modules/company/services/CompanyService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var app = angular.module( 'app', [\r\n   'caseStudies',\r\n    'clients',\r\n    'company'\r\n] );\r\n\r\n$(document).ready(function(){\r\n    var slider = $('.bxslider').bxSlider({\r\n        minSlides: 1,\r\n        moveSlides: 1,\r\n        easing: 'ease-out',\r\n        speed: 1000,\r\n        pager: !1,\r\n        infiniteLoop: !0,\r\n        controls: !1,\r\n        hideControlOnEnd: !0,\r\n        auto: true,\r\n        tickerHover: true,\r\n        touchEnabled: true,\r\n        onSliderLoad: function () {\r\n\r\n        },\r\n        onSlideBefore: function (e) {\r\n            setTimeout(function () {\r\n                $(e).find('.inner-bg').removeClass('active');\r\n            },497);\r\n\r\n        },\r\n        onSlideAfter: function (e) {\r\n            setTimeout(function () {\r\n                $(e).find('.inner-bg').addClass('active');\r\n            },500);\r\n\r\n        }\r\n\r\n    });\r\n    setTimeout(function () {\r\n    slider.getCurrentSlideElement().find('.inner-bg').addClass('active');\r\n    },500);\r\n});","var caseStudies = angular.module('caseStudies', [\r\n\r\n]);","var clients = angular.module('clients', [\r\n\r\n]);","var company = angular.module('company', [\r\n\r\n]);","caseStudies.service( 'CaseStudiesService', ['$http', '$q', function( $http, $q )\r\n{\r\n    var CaseStudiesService = {\r\n\r\n        all: function(  )\r\n        {\r\n            var deferred = $q.defer();\r\n            $http.get( '/api/case-studies/' )\r\n                .success( function( response )\r\n                {\r\n                    deferred.resolve( response );\r\n                } )\r\n                .error( function( response, status )\r\n                {\r\n                    if (status === 422)\r\n                    {\r\n                        deferred.resolve({errors: response});\r\n                    } else\r\n                    {\r\n                        deferred.reject();\r\n                    }\r\n                } );\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    };\r\n    return CaseStudiesService;\r\n}]);","caseStudies.controller( 'CaseStudiesController', [ '$scope', 'CaseStudiesService', function ( $scope, CaseStudiesService){\r\n\r\n    $scope.caseStudies = [];\r\n\r\n    this.$onInit = function () {\r\n        $scope.getData();\r\n    };\r\n\r\n    $scope.getData = function(){\r\n        CaseStudiesService.all().then(function(response)\r\n        {\r\n            $scope.caseStudies = response;\r\n            console.log(response)\r\n        });\r\n    };\r\n}]);","caseStudies.controller( 'ClientsController', [ '$scope', function ( $scope ){\r\n\r\n    $scope.clients = [];\r\n\r\n    this.$onInit = function () {\r\n\r\n        var slider = $('.client-slider').bxSlider({\r\n            slideWidth: 820,\r\n            minSlides: 1,\r\n            moveSlides: 1,\r\n            slideMargin: 20,\r\n            pager: !0,\r\n            infiniteLoop: !0,\r\n            controls: !0,\r\n            hideControlOnEnd: !0,\r\n            auto: false,\r\n            tickerHover: true,\r\n            touchEnabled: true,\r\n            onSliderLoad: function () {\r\n\r\n            },\r\n            onSlideBefore: function (e) {\r\n                //setTimeout(function () {\r\n                    //$(e).removeClass('active');\r\n                    $('.client-slide').removeClass('active');\r\n                //},497);\r\n\r\n            },\r\n            onSlideAfter: function (e) { console.log( e);\r\n                //setTimeout(function () {\r\n                    $(e).find('.client-slide').addClass('active');\r\n                //},500);\r\n\r\n            }\r\n\r\n        });\r\n       // setTimeout(function () {\r\n            slider.getCurrentSlideElement().find('.client-slide').addClass('active');\r\n       // },500);\r\n\r\n    };\r\n\r\n\r\n}]);","company.controller( 'CompanyController', [ '$scope', 'CompanyService', function ( $scope, CompanyService ){\r\n\r\n\r\n    this.$onInit = function () {\r\n        \r\n    };\r\n\r\n    $scope.send = function () {\r\n        CompanyService.sendMain().then(function (response) {\r\n            console.log( response );\r\n        });\r\n    }\r\n\r\n}]);","company.service( 'CompanyService', ['$http', '$q', function( $http, $q )\r\n{\r\n    var CompanyService = {\r\n\r\n        sendMain: function(  )\r\n        {\r\n            var deferred = $q.defer();\r\n            $http.get( '/api/company/send' )\r\n                .success( function( response )\r\n                {\r\n                    deferred.resolve( response );\r\n                } )\r\n                .error( function( response, status )\r\n                {\r\n                    if (status === 422)\r\n                    {\r\n                        deferred.resolve({errors: response});\r\n                    } else\r\n                    {\r\n                        deferred.reject();\r\n                    }\r\n                } );\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    };\r\n    return CompanyService;\r\n}]);"]}