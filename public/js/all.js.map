{"version":3,"sources":["app.js","modules/career/career.js","modules/case_studies/CaseStudies.js","modules/clients/clients.js","modules/company/company.js","modules/slider/slider.js","modules/career/controllers/CareerController.js","modules/career/services/CareerService.js","modules/case_studies/controllers/CaseStudiesController.js","modules/case_studies/services/CaseStudiesService.js","modules/clients/controllers/ClientsController.js","modules/company/controllers/CompanyController.js","modules/company/services/CompanyService.js","modules/slider/controllers/IndexController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var app = angular.module( 'app', [\r\n    'ngAnimate',\r\n   'caseStudies',\r\n    'clients',\r\n    'company',\r\n    'career',\r\n    'slider'\r\n] );\r\n\r\n$(document).ready(function(){\r\n\r\n    $(\".home li > a\").click(function(e) {\r\n        e.preventDefault();\r\n        var top = $(this).attr(\"href\");\r\n        $(\"html, body\").animate({\r\n            scrollTop: $(top).offset().top\r\n        }, 1500)\r\n    })\r\n\r\n});\r\n","var career = angular.module('career', [\r\n\r\n]);","var caseStudies = angular.module('caseStudies', [\r\n\r\n]);","var clients = angular.module('clients', [\r\n\r\n]);","var company = angular.module('company', [\r\n\r\n]);","var slider = angular.module('slider', [\r\n\r\n]);","career.controller( 'CareerController', [ '$scope', 'CareerService', function ( $scope, CareerService ){\r\n\r\n\r\n    $scope.careerForm = {};\r\n\r\n    $scope.vacancy = {\r\n        position: '',\r\n        email: '',\r\n        message: ''\r\n    };\r\n\r\n    $scope.loading = true;\r\n\r\n    $scope.removeErrors = function(){\r\n        $('#career .form-group' ).removeClass( 'has-error' );\r\n    };\r\n\r\n    $scope.setFormScope = function( form )\r\n    {\r\n        $scope.careerForm = form;\r\n    };\r\n\r\n     $scope.send = function () { console.log($scope.careerForm);\r\n        if( !$scope.careerForm.$invalid ){\r\n            CareerService.sendMail( $scope.vacancy ).then(function (response) {\r\n                $scope.vacancy = {\r\n                    position: '',\r\n                    email: '',\r\n                    message: ''\r\n                };\r\n            });\r\n        }else{\r\n            $scope.removeErrors();\r\n            for (var property in $scope.vacancy) {\r\n                if( $scope.careerForm[property].$invalid ){ \r\n                    var $field = $( '[name=\"' + property + '\"]' );\r\n                    if( $field ) {\r\n                        $field.closest( '.form-group' ) .addClass( 'has-error' );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n     };\r\n\r\n    $scope.toggleMe = function ( event ) { console.log(event)\r\n        $( event.target ).parent().find('.plus').toggleClass( 'open' );\r\n    };\r\n\r\n}]);","career.service( 'CareerService', ['$http', '$q', function( $http, $q )\r\n{\r\n    var CareerService = {\r\n\r\n        sendMail: function( message )\r\n        {\r\n            var deferred = $q.defer();\r\n            $http.post( '/api/career/send', message )\r\n                .success( function( response )\r\n                {\r\n                    deferred.resolve( response );\r\n                } )\r\n                .error( function( response, status )\r\n                {\r\n                    if (status === 422)\r\n                    {\r\n                        deferred.resolve({errors: response});\r\n                    } else\r\n                    {\r\n                        deferred.reject();\r\n                    }\r\n                } );\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    };\r\n    return CareerService;\r\n}]);\r\n","caseStudies.controller( 'CaseStudiesController', [ '$scope', 'CaseStudiesService', '$animate',\r\n    function ( $scope, CaseStudiesService, $animate){\r\n\r\n    $scope.caseStudies = [];\r\n\r\n    this.$onInit = function () {\r\n        $scope.getData();\r\n    };\r\n\r\n    $scope.visible = 'all';\r\n\r\n    $scope.filter = function ( category ) {\r\n        $scope.visible = category;\r\n    };\r\n\r\n    $scope.showPosts = function ( category ) {\r\n        return $scope.visible === 'all' || $scope.visible === category;\r\n    };\r\n    \r\n\r\n\r\n    $scope.getData = function(){\r\n        CaseStudiesService.all( 6 ).then(function(response)\r\n        {console.log(response);\r\n            $scope.caseStudies = response;\r\n            \r\n        });\r\n    };\r\n\r\n\r\n}]);","caseStudies.service( 'CaseStudiesService', ['$http', '$q', function( $http, $q )\r\n{\r\n    var CaseStudiesService = {\r\n\r\n        all: function( count )\r\n        {\r\n            var deferred = $q.defer();\r\n            $http.get( '/api/case-studies', {params:{ count: count }} )\r\n                .success( function( response )\r\n                {\r\n                    deferred.resolve( response );\r\n                } )\r\n                .error( function( response, status )\r\n                {\r\n                    if (status === 422)\r\n                    {\r\n                        deferred.resolve({errors: response});\r\n                    } else\r\n                    {\r\n                        deferred.reject();\r\n                    }\r\n                } );\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    };\r\n    return CaseStudiesService;\r\n}]);","caseStudies.controller( 'ClientsController', [ '$scope', function ( $scope ){\r\n\r\n    $scope.clients = [];\r\n\r\n    this.$onInit = function () {\r\n\r\n        var slider = $('.client-slider').bxSlider({\r\n            slideWidth: 820,\r\n            minSlides: 1,\r\n            moveSlides: 1,\r\n            slideMargin: 20,\r\n            speed: 500,\r\n            pager: !1,\r\n            infiniteLoop: !0,\r\n            controls: !0,\r\n            hideControlOnEnd: !0,\r\n            auto: false,\r\n            tickerHover: true,\r\n            touchEnabled: true,\r\n            onSliderLoad: function () {\r\n\r\n            },\r\n            onSlideBefore: function (e) {\r\n                //setTimeout(function () {\r\n                    //$(e).removeClass('active');\r\n                    $('.client-slide').removeClass('active');\r\n                //},497);\r\n\r\n            },\r\n            onSlideAfter: function (e) { console.log( e);\r\n                //setTimeout(function () {\r\n                    $(e).find('.client-slide').addClass('active');\r\n                //},500);\r\n\r\n            }\r\n\r\n        });\r\n       // setTimeout(function () {\r\n            slider.getCurrentSlideElement().find('.client-slide').addClass('active');\r\n       // },500);\r\n\r\n    };\r\n\r\n    $(window).load(function () {\r\n        var scroll = $(window).scrollTop();\r\n        var height = $(window).height();\r\n        var partners = $('#clients .partnerz' ).offset().top;\r\n        var partnersHeight = $('#clients .partnerz' ).height();\r\n        var breakpoint = ( scroll + ( height / 2 ));\r\n\r\n        if ( breakpoint > ( partners - 100 ) &&  breakpoint < ( partners + partnersHeight + 100 ) ) {\r\n            $(\".year\").addClass(\"active\");\r\n            $(\".year-txt\").addClass(\"active\");\r\n            $('.partner .image').addClass( 'active' );\r\n        }\r\n\r\n\r\n        $(window).on('scroll',function() {\r\n            var currentScroll = $(window).scrollTop();\r\n            var currentBreakpoint = ( currentScroll + ( height / 2 ));\r\n\r\n            if ( currentBreakpoint > ( partners - 100 ) &&  currentBreakpoint < ( partners + partnersHeight + 100 ) ){\r\n\r\n                $(\".year\").addClass(\"active\");\r\n                $(\".year-txt\").addClass(\"active\");\r\n                $('.partner .image').addClass( 'active' );\r\n            }\r\n        });\r\n\r\n    });\r\n\r\n\r\n}]);","company.controller( 'CompanyController', [ '$scope', 'CompanyService', function ( $scope, CompanyService ){\r\n\r\n\r\n    $scope.contactForm = {};\r\n\r\n    $scope.message = {\r\n        cfsender: '',\r\n        cfemail: '',\r\n        cfsubject: '',\r\n        cftext: ''\r\n    };\r\n    \r\n    $scope.loading = true;\r\n    \r\n    this.$onInit = function () {\r\n        $scope.init_map();\r\n    };\r\n\r\n    $scope.setFormScope = function( form )\r\n    {\r\n        $scope.contactForm = form;\r\n    };\r\n\r\n    $scope.removeErrors = function(){\r\n        $('#company .form-group' ).removeClass( 'has-error' );\r\n    };\r\n\r\n    $scope.send = function () { \r\n        if(\r\n            //!$scope.loading &&\r\n            !$scope.contactForm.$invalid ){\r\n            //$scope.loading = true;\r\n            \r\n            CompanyService.sendMail( $scope.message ).then(function (response) {\r\n                //$scope.loading = false;\r\n\r\n                $scope.message = {\r\n                    cfsender: '',\r\n                    cfemail: '',\r\n                    cfsubject: '',\r\n                    cftext: ''\r\n                };\r\n\r\n            });\r\n        }else{\r\n            $scope.removeErrors();\r\n            for (var property in $scope.message) {\r\n\r\n                    if( $scope.contactForm[property].$invalid ){\r\n                        var $field = $( '[name=\"' + property + '\"]' ); console.log($field);\r\n                        if( $field )\r\n                        {\r\n                            $field.closest( '.form-group' )\r\n                                .addClass( 'has-error' );\r\n                        }\r\n                    }\r\n\r\n            }\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    $scope.init_map = function (){\r\n        var myOptions = {\r\n            zoom:14,\r\n            center:new google.maps.LatLng(56.526248,27.357412599999975),\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP};\r\n        map = new google.maps.Map(document.getElementById('gmap_canvas'), myOptions);\r\n        marker = new google.maps.Marker({map: map,position: new google.maps.LatLng(56.526248,27.357412599999975)});\r\n        infowindow = new google.maps.InfoWindow({content:'<strong> </strong><br>Rēzekne, Maskavas 22<br>'});\r\n        google.maps.event.addListener(marker, 'click', function(){\r\n            infowindow.open(map,marker);\r\n        });\r\n        //infowindow.open(map,marker);\r\n        //google.maps.event.addDomListener(window, 'load', init_map);\r\n    }\r\n\r\n}]);","company.service( 'CompanyService', ['$http', '$q', function( $http, $q )\r\n{\r\n    var CompanyService = {\r\n\r\n        sendMail: function( message )\r\n        {\r\n            var deferred = $q.defer();\r\n            $http.post( '/api/company/send', message )\r\n                .success( function( response )\r\n                {\r\n                    deferred.resolve( response );\r\n                } )\r\n                .error( function( response, status )\r\n                {\r\n                    if (status === 422)\r\n                    {\r\n                        deferred.resolve({errors: response});\r\n                    } else\r\n                    {\r\n                        deferred.reject();\r\n                    }\r\n                } );\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n    };\r\n    return CompanyService;\r\n}]);","slider.controller( 'IndexController', [ '$scope', function ( $scope ){\r\n\r\n    $scope.slider = {};\r\n\r\n    this.$onInit = function () {\r\n        $scope.initSlider();\r\n    };\r\n\r\n    $scope.makeActive = function (e) {\r\n        $(e).find('.inner-bg').addClass('active');\r\n    };\r\n\r\n    $scope.makeInActive = function (e) {\r\n        $(e).find('.inner-bg').addClass('leaving');\r\n    }\r\n\r\n\r\n    $scope.initSlider = function () {\r\n\r\n        $(document).ready(function(){\r\n\r\n\r\n\r\n            $scope.slider = $('.bxslider').bxSlider({\r\n                minSlides: 1,\r\n                moveSlides: 1,\r\n                easing: 'ease-out',\r\n                speed: 0,\r\n                pager: !0,\r\n                pause: 4000,\r\n                infiniteLoop: true,\r\n                useCSS: false,\r\n                controls: !1,\r\n                hideControlOnEnd: !0,\r\n                auto: false,\r\n                tickerHover: true,\r\n                touchEnabled: true,\r\n                onSliderLoad: function (currentIndex) {\r\n                    $( '#slider' ).css( 'opacity', 1 );\r\n                },\r\n                onSlideBefore: function (e) {\r\n                    //setTimeout(function () {\r\n                    $('.inner-bg').removeClass('active');\r\n                    $('.inner-bg').removeClass('leaving');\r\n                    //},497);\r\n\r\n                },\r\n                onSlideAfter: function (e) {\r\n                    setTimeout($scope.makeActive( e ), 50);\r\n\r\n                    //setTimeout( $scope.makeInActive( e ), 3000);\r\n\r\n                }\r\n\r\n            });\r\n            $scope.slider.getCurrentSlideElement().find('.inner-bg').addClass('active');\r\n            setTimeout(function () {\r\n                //$scope.slider.getCurrentSlideElement().find('.inner-bg').addClass('leaving');\r\n            },3000);\r\n\r\n        });\r\n\r\n    };\r\n    \r\n    \r\n\r\n}]);"]}